name: Build and Deploy

on:
  push:
    branches:
      - master  # Change selon ta branche principale

permissions:
  packages: write
  contents: read

jobs:
  changes:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      back: ${{ steps.filter.outputs.back }}
      front: ${{ steps.filter.outputs.front }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            back:
              - 'territoire-back/**'
            front:
              - 'territoire-front/**'

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        if: ${{ needs.changes.outputs.back == 'true' || needs.changes.outputs.front == 'true' }}
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Backend Image
        if: ${{ needs.changes.outputs.back == 'true' }}
        run: |
          docker build -t ghcr.io/cteillet/territoire-back:latest ./territoire-back
          docker push ghcr.io/cteillet/territoire-back:latest

      - name: Build and Push Frontend Image
        if: ${{ needs.changes.outputs.front == 'true' }}
        run: |
          docker build -t ghcr.io/cteillet/territoire-front:latest ./territoire-front
          docker push ghcr.io/cteillet/territoire-front:latest

  deploy:
    name: Deploy to VPS
    needs: [changes, build-and-push]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Copy docker-compose.yml to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_ID }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VPS_SSH_ID }}/territoire/"

      - name: Connect to VPS and remove older config folder
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_ID }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          script: |
            rm -rf /home/${{ secrets.VPS_SSH_ID }}/territoire/config

      - name: Copy config folder to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_ID }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          source: "config"
          target: "/home/${{ secrets.VPS_SSH_ID }}/territoire/"

      - name: Connect to VPS and Deploy
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_ID }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          script: |
            if [ "${{ needs.changes.outputs.back }}" = "true" ] || [ "${{ needs.changes.outputs.front }}" = "true" ]; then
              docker login ghcr.io -u cteillet --password ${{ secrets.GITHUB_TOKEN }}
            fi
            if [ "${{ needs.changes.outputs.back }}" = "true" ]; then
              docker pull ghcr.io/cteillet/territoire-back:latest
            fi
            if [ "${{ needs.changes.outputs.front }}" = "true" ]; then
              docker pull ghcr.io/cteillet/territoire-front:latest
            fi
            cd /home/${{ secrets.VPS_SSH_ID }}/territoire
            docker compose up -d --force-recreate

      - name: Clean up old Docker images
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_ID }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          script: |
            docker image prune -a -f
